name: CI

on:
  push:
    branches: [ staging, trying, master ]
  pull_request:

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    needs: [build, test, test-native]
    steps:
      - name: Done
        run: exit 0

  build:
    name: Build
    strategy:
      matrix:
        include:
          - { target: x86_64-unknown-linux-gnu, os: ubuntu-latest  }
          - { target: x86_64-apple-darwin,      os: macos-latest   }
          - { target: aarch64-apple-darwin,     os: macos-latest   }
          - { target: x86_64-pc-windows-msvc,   os: windows-latest }
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          target: ${{ matrix.target }}
          override: true

      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target ${{ matrix.target }} --release

  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true

      - name: Print enabled target features
        run: rustc --print=cfg -C target-cpu=native

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test

  test-native:
    name: Test (cpu=native)
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: 1
      RUSTFLAGS: -C target-cpu=native

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true

      - name: Print enabled target features
        run: rustc --print=cfg -C target-cpu=native

      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
